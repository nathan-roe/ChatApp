{"version":3,"sources":["components/main/Draggable.jsx","components/main/Droppable.jsx","components/main/Message.jsx","views/main/Main.jsx","components/LoginForm.jsx","views/log_and_reg/Login.jsx","components/RegisterForm.jsx","views/log_and_reg/Register.jsx","components/main/NewRoom.jsx","App.js","index.js"],"names":["Draggable","props","id","onDragStart","e","target","dataTransfer","dropEffect","setData","setTimeout","style","display","onDragOver","stopPropagation","className","draggable","children","Droppable","onDrop","preventDefault","data_id","getData","data","document","getElementById","appendChild","dataArr","split","navigate","Message","require","chat","padding","paddingTop","border","marginTop","borderRadius","alignItems","justifyContent","marginBottom","fontSize","user","marginLeft","time","message","moment","Main","userId","roomId","useState","io","socket","setUser","setMessage","messages","setMessages","leftNav","setLeftNav","midColWidth","setMidColWidth","inputWidth","setInputWidth","update","setUpdate","tabs","setTabs","tabVal","setTabVal","friendsVal","setFriendsVal","friends","setFriends","friendName","setFriendName","roomName","setRoomName","useEffect","axios","get","then","res","undefined","_id","tabArr","_roomIds","filter","room","map","val","i","name","push","friendArr","_friends","console","log","catch","err","messageLog","scrollToBottom","length","on","includes","mesArr","put","bottomRef","useRef","current","scrollIntoView","Container","fluid","maxWidth","maxHeight","backgroundColor","Row","Col","xs","onClick","width","height","viewBox","fill","xmlns","fillRule","d","flexDirection","textAlign","Card","overflow","overflowX","Title","post","response","firstName","alignSelf","Text","paddingLeft","paddingRight","borderBottom","cursor","tab","onSubmit","idx","typeBox","Object","assign","tabSubmitHandler","type","value","onDoubleClick","onChange","nameArr","friendId","lastName","datafriendId","htmlFor","overflowY","ref","Form","format","emit","disconnect","Group","Control","Button","margin","LoginForm","onSubmitProp","email","setEmail","password","setPassword","Label","zIndex","color","to","Login","errors","setErrors","RegisterForm","setFirstName","setLastName","phone","setPhone","confirmPassword","setConfirmPassword","profileImg","Register","newRoom","App","path","NewRoom","ReactDOM","render"],"mappings":"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","file":"static/js/main.d9432184.chunk.js","sourcesContent":["import React from 'react';\r\nfunction Draggable (props) {\r\n    // console.log(props.id);\r\n    const dragStart = e => {\r\n        const target = e.target;\r\n        e.dataTransfer.dropEffect = \"copy\"\r\n        e.dataTransfer.setData('transfer', target.id);\r\n        setTimeout(() => {\r\n            target.style.display = 'none';\r\n        }, 0)\r\n    }\r\n    const dragOver = e => {\r\n        e.stopPropagation();\r\n    }\r\n    return (\r\n        <div id={props.id} onDragStart={dragStart} onDragOver={dragOver} className={props.className} draggable='true'>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\nexport default Draggable;","import { navigate } from '@reach/router';\r\nimport React from 'react';\r\nfunction Droppable (props) {\r\n    const drop = e => {\r\n        // if(e.target.className !== 'midHeader')\r\n        // {   \r\n        //     console.log('wrong spot')\r\n        //     return;\r\n        // }   \r\n        e.preventDefault();\r\n        const data_id = e.dataTransfer.getData('transfer');\r\n        const data = document.getElementById(data_id);\r\n        data.style.display = 'inherit';\r\n        e.target.appendChild(data);\r\n        let dataArr = data_id.split(',')\r\n        navigate('/newRoom/' + dataArr[0] + '/' + dataArr[1])\r\n        // navigate('/main/' + dataArr[0] + '/' + dataArr[1]);\r\n    }\r\n    const dragOver = e => {\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n        <div id={props.id} onDrop={drop} onDragOver={dragOver} className={props.className} style={{display: \"flex\"}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\nexport default Droppable;","import react from 'react';\r\nconst moment = require('moment');\r\n\r\nconst Message = ({chat}) => {\r\n    return (\r\n        <div style={{padding: '5px', paddingTop: '0', border: '1px solid grey', marginTop: '2vh', borderRadius: '1em'}}>\r\n            <div style={{display: 'flex', alignItems: \"baseline\", justifyContent: 'space-between', marginTop: '0', marginBottom: '2vh'}}>\r\n                <b style={{fontSize: \"16px\"}}>{chat.user[0]} {chat.user[1]}</b>\r\n                <p style={{marginLeft: '1vw', fontSize: \"12px\"}}>{chat.time}</p>\r\n            </div>\r\n            <p>{chat.message}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default Message;","import { useEffect, useState, React, useRef} from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport {Link, navigate} from '@reach/router';\r\nimport {Form, Container, Button, Row, Col, Tabs} from 'react-bootstrap';\r\nimport '../styles/main_style.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Draggable from '../../components/main/Draggable';\r\nimport Droppable from '../../components/main/Droppable';\r\nimport Message from '../../components/main/Message';\r\nconst moment = require('moment');\r\n\r\nconst Main = ({userId, roomId}) => {\r\n    const [socket] = useState(() => io(':8000'));\r\n    const [user, setUser] = useState({});\r\n    const [message, setMessage] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [leftNav, setLeftNav] = useState(true);\r\n    const [midColWidth, setMidColWidth] = useState(8);\r\n    const [inputWidth, setInputWidth] = useState(\"52vw\");\r\n    const [update, setUpdate] = useState(false);\r\n    const [tabs, setTabs] = useState([]);\r\n    const [tabVal, setTabVal] = useState([]);\r\n    const [friendsVal, setFriendsVal] = useState([]);\r\n    const [friends, setFriends] = useState([]);\r\n    const [friendName, setFriendName] = useState('');\r\n    const [roomName, setRoomName] = useState('');\r\n    useEffect(() => {\r\n        \r\n        axios.get('http://localhost:8000/api/users/' + userId)\r\n            .then(res => {\r\n                res.data._id === undefined ?\r\n                    navigate('/') :\r\n                    setUser(res.data);\r\n                let tabArr = [];\r\n                res.data._roomIds.filter(room => room !== roomId).map((val, i) => {\r\n                    axios.get('http://localhost:8000/api/roomIds/get/' + val)\r\n                        .then(res => {\r\n                            setTabVal([...tabVal, res.data.name])\r\n                            // console.log(\"All previous tabs: \")\r\n                            // console.log([...tabs])\r\n                            \r\n                            tabArr.push({'name': res.data.name, 'roomId': res.data.id, \"type\": 'submit', \"_id\": res.data._id});\r\n                            // console.log(\"The tab arr is: \")\r\n                            // console.log(tabArr);\r\n                            \r\n                        });\r\n                })\r\n                setTabs(tabArr);\r\n                let friendArr = [];\r\n                res.data._friends.map((val, i) => {\r\n                    axios.get('http://localhost:8000/api/friends/get/' + val)\r\n                        .then(res => {\r\n                            setFriendsVal([...friendsVal, res.data.friendName])\r\n                            friendArr.push({'name': res.data.friendName, 'friendId': res.data.id, \"_id\": res.data._id});\r\n                        });\r\n                })\r\n                setFriends(friendArr);\r\n                console.log(friends);\r\n            })\r\n            .catch(err => console.log(\"This user is not in the database\", err));\r\n            axios.get('http://localhost:8000/api/rooms/' + roomId)\r\n            .then(res => {\r\n                setMessages(res.data.messageLog);\r\n            })\r\n            .catch(err => console.log(\"This user is not in the database\", err));\r\n            scrollToBottom();\r\n    }, [])\r\n    useEffect(() => {\r\n        console.log(\"The useEffect was enteed\")\r\n        if(messages.length > 0)\r\n        {\r\n            console.log(\"Messages length is greater than 0\")\r\n            socket.on('message-to-client', data => {\r\n                if(messages.includes(data))\r\n                {\r\n                    return;\r\n                }\r\n                let mesArr = [...messages, data];\r\n                console.log(mesArr);\r\n                axios.put('http://localhost:8000/api/rooms/edit/' + roomId, mesArr)\r\n                    .then(res => res)\r\n                    .catch(err => err);\r\n                setMessages(mesArr);\r\n                scrollToBottom();\r\n            });\r\n            setUpdate(false);\r\n            // console.log(user);\r\n        }\r\n    }, [update]);\r\n\r\n    const onLeftNavClick = e => {\r\n        let newVal = !leftNav;\r\n        setLeftNav(newVal);\r\n        if(leftNav === false) {\r\n            setMidColWidth(8);\r\n            setInputWidth(\"52vw\")\r\n        } else {\r\n            setMidColWidth(10);\r\n            setInputWidth(\"68.70vw\")\r\n        }\r\n    }\r\n    const bottomRef = useRef();\r\n    const scrollToBottom = () => {\r\n        if(bottomRef.current !== null)\r\n        {\r\n            bottomRef.current.scrollIntoView()\r\n        }\r\n    };\r\n    const onSubmitHandler = e => {\r\n        console.log(\"Began submit process\")\r\n        e.preventDefault();\r\n        let time = moment().format('M/D/YY hh:mm a');\r\n        socket.emit('message-to-server', {\"message\": message, \"time\": time,\"user\": [user.firstName, user.lastName, user._id]});\r\n        console.log(\"Socket emitted\")\r\n        setUpdate(true);\r\n        setMessage('');\r\n        return () => socket.disconnect(true);\r\n    }\r\n    const createNewRoom = () => {\r\n        // console.log(\"room is being created!\")\r\n        axios.post('http://localhost:8000/api/rooms/new')\r\n            .then(response => {\r\n                // console.log(response.data);\r\n                axios.post('http://localhost:8000/api/roomId/' + userId, {\"name\": `${user.firstName}'s room`, \"id\":response.data._id})\r\n                    .then(res => {\r\n                        // console.log(res);\r\n                        setTabs([...tabs, {'name': res.data.name, 'roomId': res.data.id, \"type\": 'submit', \"_id\": res.data._id}])\r\n                    })\r\n                    .catch(err => console.log(err));\r\n                navigate('/main/' + user._id + '/' + response.data._id);\r\n            })\r\n            .catch(err => console.log(err))\r\n    }\r\n    console.log(\"the room id is: \", roomId)\r\n    axios.get('http://localhost:8000/api/roomIds/getRoom/' + roomId)\r\n            .then(res => setRoomName(res.data.name)) \r\n            .catch(err => console.log(err));\r\n    // const getNavTabs = () => {\r\n    //     let tabVar = [];\r\n    //     axios.get('http://localhost:8000/api/users/' + userId)\r\n    //         .then(res => {\r\n    //             res.data._id === undefined ?\r\n    //                 navigate('/') :\r\n    //                 setUser(res.data);\r\n    //             res.data._roomIds.filter(room => room !== roomId).map((val, i) => {\r\n    //                 axios.get('http://localhost:8000/api/roomIds/get/' + val)\r\n    //                     .then(res => {\r\n    //                         tabVar.push(res.data)\r\n    //                     });\r\n    //             })\r\n    //         })\r\n    //     return tabVar;\r\n    // }\r\n    const tabSubmitHandler = (e, idx) => {\r\n        e.preventDefault();\r\n        // if(tabVal[idx] === '')\r\n        // {\r\n        //     return;\r\n        // }\r\n        // let box = {\"name\": tabs[idx].name}\r\n        let typeBox = {\"type\": \"submit\"}\r\n        // console.log(tabs);\r\n        // setTabs(tabs.map(tab => tab === tabs[idx] ? Object.assign({}, tab, box) : tab));\r\n        // console.log(tabs[idx]);\r\n        setTabs(tabs.map(tab => {return tab === tabs[idx] ? Object.assign({}, tab, typeBox) : tab}));\r\n        axios.put('http://localhost:8000/api/roomIds/edit/' + tabs[idx]._id, {name: tabs[idx].name})\r\n            .then(res => console.log(res))\r\n            .catch(err => console.log(err));\r\n    }\r\n    const addFriend = (e) => {\r\n        e.preventDefault();\r\n        let nameArr = friendName.split(' ');\r\n        console.log(\"The name array is: \")\r\n        console.log(nameArr);\r\n        console.log(nameArr[0]);\r\n        console.log(nameArr[1]);\r\n        axios.get('http://localhost:8000/api/users/all')\r\n            .then(\r\n                res => {\r\n                    let friendId = res.data.filter(user => user.firstName == nameArr[0] && user.lastName == nameArr[1]).map(user => user._id);\r\n                    console.log(friendId[0])\r\n                    axios.post('http://localhost:8000/api/friend/' + friendId[0], {\"friendName\": `${nameArr[0]} ${nameArr[1]}`, \"id\":friendId})\r\n                        .then(res => {\r\n                            console.log(\"Hello World\")\r\n                            console.log(res.data);\r\n                            setFriends([...friends, {'name': res.data.friendName, 'id': res.datafriendId}])\r\n                        })\r\n                        .catch(err => console.log(err));\r\n                }\r\n            )\r\n            .catch(err => console.log(err));\r\n    }\r\n    // let userImg = require('../../uploads/' + user.profileImg)\r\n    return (\r\n        <Container fluid=\"sm\" className='container' style={{maxWidth: \"100%\", maxHeight: '100vh', backgroundColor: \"rgb(45,51,56)\"}}>\r\n            <Row>\r\n                        <Col xs={.5} style={{display: 'flex', justifyContent: 'flex-start'}}>\r\n                        <button onClick={onLeftNavClick} style={{maxHeight: \"6vh\", border: \"2px solid whitesmoke\", width: \"100%\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n                        <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 16 16\" className=\"bi bi-arrow-right-circle\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path fillRule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n                            <path fillRule=\"evenodd\" d=\"M4 8a.5.5 0 0 0 .5.5h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5A.5.5 0 0 0 4 8z\"/>\r\n                            </svg>\r\n                            </button>\r\n                        </Col>\r\n                {\r\n                    \r\n                    leftNav ? \r\n                        <Col xs={2}>\r\n                        <Row style={{display: \"flex\", flexDirection: \"column\", height: \"45vh\", textAlign: \"center\"}}>\r\n                        <Card className=\"bg-dark text-white\" style={{width: \"100%\", height: \"45vh\", overflow: \"scroll hidden\", overflowX: 'hidden', display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                                <div className='scrollbar scrollbar-primary'>\r\n                                <div className=\"navHeader\" style={{display: 'flex'}}>\r\n                                <Card.Title><button onClick={createNewRoom} style={{maxHeight: \"6vh\", border: \"2px solid whitesmoke\", width: \"100vw\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", alignSelf: \"center\"}}>Create a Room!</button></Card.Title>\r\n                                </div>\r\n                                <Card.Text style={{paddingLeft: '45vw', paddingRight: '45vw', borderBottom: \"1px solid grey\"}}>\r\n                                    Your Rooms | <span style={{cursor: 'pointer'}} onClick={e => navigate('/newRoom/' + userId + '/5fb4a3eb1285541d50d8cc7d')}>Main</span>\r\n                                </Card.Text>\r\n                                {\r\n                                    // tabs.length > 1 ? \r\n                                    tabs.map((tab, i) => \r\n                                    <Draggable id={[user._id, tab.roomId]} className={i} key={i}>\r\n                                        <form onSubmit={e => tabSubmitHandler(e, i)}>\r\n                                            <input style={{width: \"12%\"}}type={tabs[i].type} value={tabs[i].name} \r\n                                            onDoubleClick={e => \r\n                                                setTabs(tabs.map(tab => {\r\n                                                    let tabType = {type: 'text'};\r\n                                                    return tab === tabs[i] ? Object.assign({}, tab, tabType) : tab;\r\n                                                }))\r\n                                            } onChange = {e => setTabs(tabs.map(tab => tab === tabs[i] ? Object.assign({}, tab, {'name': e.target.value}) : tab))}\r\n                                            ></input>\r\n                                            {/* onChange={e => setTabVal(tabs.map(tab => tab === tabs[i] ? tab = e.target.value : tab))} */}\r\n                                        </form>\r\n                                    </Draggable>\r\n                                    // <h1>Hello World</h1>\r\n                                    ) \r\n                                }\r\n                                </div>\r\n                        </Card>\r\n                        </Row>\r\n                        <Row style={{display: \"flex\", flexDirection: \"column\", alignItems: \"stretch\", height: \"45vh\"}}>\r\n                            <Card className=\"bg-dark text-white\" style={{width: \"100%\", height: \"45vh\", overflow: \"scroll hidden\", overflowX: 'hidden', display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                                    <div className='scrollbar scrollbar-primary'>\r\n                                    <div className=\"navHeader\" style={{display: 'flex'}}></div>\r\n                                    <Card.Title style={{maxHeight: \"6vh\", border: \"2px solid whitesmoke\", width: \"100vw\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", alignSelf: \"center\"}}>Friends</Card.Title>\r\n                                    <Card.Text style={{paddingLeft: '45vw', paddingRight: '45vw', textAlign: 'center'}}>\r\n                                    <form onSubmit={addFriend}>\r\n                                        <label htmlFor=\"\">Please enter a friend's name:</label>\r\n                                        <input type=\"text\" onChange={e => setFriendName(e.target.value)}/>\r\n                                        <input type=\"submit\" value=\"submit friend\"/>\r\n                                    </form>\r\n                                    {\r\n                                        friends.map((val, i) => {\r\n                                        <p>{val.friendName}</p>\r\n                                        })\r\n                                    }\r\n                                    </Card.Text>\r\n                                    </div>\r\n                            </Card>\r\n                        </Row>\r\n                        <Row style={{display: \"flex\", flexDirection: \"column\", alignItems: \"stretch\", height: \"10vh\"}}>\r\n                            {/* <img src={userImg} alt=\"#\" style={{width: \"100px\", height: \"100px\"}}/> */}\r\n                            {/* <p>FirstName</p> */}\r\n                            <Card className=\"bg-dark text-white\" style={{width: \"100%\", height: \"10vh\", overflow: \"scroll hidden\", overflowX: 'hidden'}}>\r\n                                    <Card.Title>Hello {user.firstName} {user.lastName}</Card.Title>\r\n                            </Card>\r\n                        </Row>\r\n\r\n                    </Col>\r\n                : \r\n                ''\r\n                }\r\n                <Col xs={midColWidth} style={{padding: \"0px\"}}>\r\n                    <Card className=\"bg-dark text-white\" style={{width: \"100%\", height: \"100vh\", display: \"flex\", justifyContent: \"space-between\", flexDirection: \"column\"}}>\r\n                        <Droppable userId={user._id}>\r\n                        <div className=\"midHeader\" style={{width: \"100%\", borderBottom: \"1px solid grey\", height: \"10vh\", paddingTop: \"0px\", display: \"flex\", justifyContent: \"space-evenly\", paddingTop: \"2vh\"}}>\r\n                                {\r\n                                    roomName ? \r\n                                    <h4>{roomName}</h4> :\r\n                                    ''\r\n                                }\r\n                                {\r\n                                    roomId === '5fb4a3eb1285541d50d8cc7d' ?\r\n                                    <h4>Main</h4> : \r\n                                    ''\r\n                                }\r\n                        </div>\r\n                        </Droppable>\r\n                        <div className=\"centerMain\" style={{overflowY: \"scroll\"}}>\r\n                            {\r\n                                messages.map((chat, i) => {\r\n                                    return <div key={i}>\r\n                                        <Message chat={chat}/> \r\n                                    </div>\r\n                                })\r\n                            }\r\n                            \r\n                            \r\n                            <div ref={bottomRef} className=\"list-bottom\"></div>\r\n                        </div>\r\n                            <div className=\"userInput\">\r\n                                <Form style={{display: \"flex\"}} onSubmit={onSubmitHandler}>\r\n                                    <Form.Group>\r\n                                        <Form.Control type=\"text\" style={{width: inputWidth}} value={message} onChange={e => setMessage(e.target.value)}>\r\n\r\n                                        </Form.Control>\r\n                                    </Form.Group>\r\n                                    <Form.Group>\r\n                                        <Button style={{marginLeft: '2vw', width: \"10vw\"}} type=\"submit\">\r\n                                            Chat\r\n                                        </Button>\r\n                                    </Form.Group>\r\n                                </Form>\r\n                            </div> \r\n                    </Card>\r\n                    {/*  */}\r\n                </Col>\r\n                <Col style={{height: \"100vh\", margin: \"0px\", padding: \"0px\"}} xs={1.2}>\r\n                    <div className=\"contacts\" style={{height: \"60vh\"}}>\r\n                    <Card className=\"bg-dark text-white\" style={{width: \"100%\", height: \"60vh\", overflow: \"scroll hidden\", overflowX: 'hidden'}}>\r\n                            {/* <Card.Title>Your Friends</Card.Title>\r\n                            <Card.Text>\r\n                            This is a wider card with supporting text below as a natural lead-in to\r\n                            additional content. This content is a little bit longer.\r\n                            </Card.Text>\r\n                            <Card.Text>Last updated 3 mins ago</Card.Text> */}\r\n                    </Card>\r\n                        {/* <div style={{display: \"flex\", justifyContent: \"space-evenly\", paddingBottom: \"2vh\"}}>\r\n                            <img src=\"\" alt=\"#\"/>\r\n                            <p>FirstName LastName</p>\r\n                        </div> */}\r\n                        {/* <div style={{display: \"flex\", justifyContent: \"space-evenly\", paddingBottom: \"2vh\"}}>\r\n                            <img src=\"\" alt=\"#\"/>\r\n                            <p>FirstName LastName</p>\r\n                        </div>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-evenly\", paddingBottom: \"2vh\"}}>\r\n                            <img src=\"\" alt=\"#\"/>\r\n                            <p>FirstName LastName</p>\r\n                        </div> */}\r\n                    </div>\r\n                    <div className=\"social\" style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                        {/* <h3>Social</h3>\r\n                        <p style={{textAlign: \"center\"}}>See what other people are talking about</p> */}\r\n                        <Card className=\"bg-dark text-white\" style={{width: \"100%\", height: \"40vh\", overflow: \"scroll hidden\", overflowX: 'hidden'}}>\r\n                                {/* <Card.Text>\r\n                                This is a wider card with supporting text below as a natural lead-in to\r\n                                additional content. This content is a little bit longer.\r\n                                </Card.Text> */}\r\n                        </Card>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\nexport default Main;","import { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport {Link} from '@reach/router';\r\nimport {Form, Container, Button} from 'react-bootstrap';\r\nconst LoginForm = ({onSubmitProp}) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        onSubmitProp({email, password});\r\n    }\r\n    return (\r\n        <Container style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", border: \"1px solid grey\", height: \"75vh\", width: \"50vw\", justifyContent: \"space-between\", marginTop: \"5vh\", marginBottom: \"5vh\"}}>\r\n            <h1 style={{paddingTop: \"2vh\"}}>Chat App</h1>\r\n            <h3>Sign In</h3>\r\n            <Form style={{width: \"50%\"}} onSubmit={onSubmitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label style={{marginBottom: \"-15px\", paddingLeft: \"10px\", textAlign: \"center\", width: \"100%\"}}>\r\n                        <span style={{marginBottom: \"-15px\", zIndex: \"2\", backgroundColor: \"white\", padding: \"1px\", color: \"gray\"}}>Email or Phone</span>\r\n                    </Form.Label>\r\n                    <Form.Control type=\"text\" style={{paddingTop: \"5px\", marginTop: \"-12px\", textAlign: \"center\", color: \"black\"}} onChange={e => setEmail(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label style={{marginBottom: \"-15px\", paddingLeft: \"10px\", textAlign: \"center\", width: \"100%\"}}>\r\n                        <span style={{marginBottom: \"-15px\", zIndex: \"2\", backgroundColor: \"white\", padding: \"1px\", color: \"gray\"}}>Password</span>\r\n                    </Form.Label>\r\n                    <Form.Control type=\"password\" style={{paddingTop: \"5px\", marginTop: \"-12px\", textAlign: \"center\", color: \"black\"}} onChange={e => setPassword(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                    <Button type=\"submit\">\r\n                        Continue\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n            <p>Not a User? <Link to={\"/register\"}>Create an Account!</Link></p>\r\n        </Container>\r\n    );\r\n}\r\nexport default LoginForm;\r\n","import { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport {Link, navigate} from '@reach/router';\r\nimport {Form, Container, Button} from 'react-bootstrap';\r\nimport LoginForm from '../../components/LoginForm';\r\nconst Login = () => {\r\n    const [errors, setErrors] = useState([]);\r\n    const findUser = user => {\r\n        axios.get('http://localhost:8000/api/users/email/' + user.email)\r\n            .then(res => {\r\n                if(res.data.password === user.password){\r\n                    navigate('/main/' + res.data._id + '/5fb4a3eb1285541d50d8cc7d');\r\n                    // axios.post('http://localhost:8000/api/rooms/new')\r\n                    // .then(response => {\r\n                    //     navigate('/main/' + res.data._id + '/' + response.data._id);\r\n                    // })\r\n                    // .catch(err => console.log(err))\r\n\r\n                }\r\n                else{\r\n                    setErrors([\"Email or Password is incorrect\"]);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setErrors([\"Email or Password is incorrect\"])\r\n            });\r\n    }\r\n    return (\r\n        <div>\r\n            < LoginForm onSubmitProp={findUser}/>\r\n            {\r\n                errors.map((val, i) => {\r\n                return <p key={i}>{val}</p>\r\n                })\r\n            }\r\n        </div>\r\n        \r\n    );\r\n}\r\nexport default Login;","import { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport {Link} from '@reach/router';\r\nimport {Form, Container, Button} from 'react-bootstrap';\r\nconst RegisterForm = ({onSubmitProp}) => {\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [profileImg] = useState('default-avatar.png')\r\n    const onSubmitHandler = e => {\r\n        e.preventDefault();\r\n        onSubmitProp({firstName, lastName, email, phone, password, confirmPassword, profileImg});\r\n        \r\n    }\r\n    return (\r\n        <Container style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\", border: \"1px solid grey\", height: \"fit-content\", width: \"50vw\", justifyContent: \"space-between\", marginTop: \"1vh\", marginBottom: \"1vh\"}}>\r\n        <h1 style={{paddingTop: \"2vh\"}}>Chat App</h1>\r\n        <h3>Register</h3>\r\n        <Form style={{width: \"50%\"}} onSubmit={onSubmitHandler}>\r\n            <Form.Group>\r\n                <Form.Label style={{marginBottom: \"-15px\", paddingLeft: \"10px\", textAlign: \"center\", width: \"100%\"}}>\r\n                    <span style={{marginBottom: \"-15px\", zIndex: \"2\", backgroundColor: \"white\", padding: \"1px\", color: \"gray\"}}>First Name</span>\r\n                </Form.Label>\r\n                <Form.Control type=\"text\" style={{paddingTop: \"5px\", marginTop: \"-12px\", textAlign: \"center\", color: \"black\"}} onChange={e => setFirstName(e.target.value)}>\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label style={{marginBottom: \"-15px\", paddingLeft: \"10px\", textAlign: \"center\", width: \"100%\"}}>\r\n                    <span style={{marginBottom: \"-15px\", zIndex: \"2\", backgroundColor: \"white\", padding: \"1px\", color: \"gray\"}}>Last Name</span>\r\n                </Form.Label>\r\n                <Form.Control type=\"text\" style={{paddingTop: \"5px\", marginTop: \"-12px\", textAlign: \"center\", color: \"black\"}} onChange={e => setLastName(e.target.value)}>\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label style={{marginBottom: \"-15px\", paddingLeft: \"10px\", textAlign: \"center\", width: \"100%\"}}>\r\n                    <span style={{marginBottom: \"-15px\", zIndex: \"2\", backgroundColor: \"white\", padding: \"1px\", color: \"gray\"}}>Email Address</span>\r\n                </Form.Label>\r\n                <Form.Control type=\"email\" style={{paddingTop: \"5px\", marginTop: \"-12px\", textAlign: \"center\", color: \"black\"}} onChange={e => setEmail(e.target.value)}>\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label style={{marginBottom: \"-15px\", paddingLeft: \"10px\", textAlign: \"center\", width: \"100%\"}}>\r\n                    <span style={{marginBottom: \"-15px\", zIndex: \"2\", backgroundColor: \"white\", padding: \"1px\", color: \"gray\"}}>Phone Number</span>\r\n                </Form.Label>\r\n                <Form.Control type=\"tel\" style={{paddingTop: \"5px\", marginTop: \"-12px\", textAlign: \"center\", color: \"black\"}} onChange={e => setPhone(e.target.value)}>\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label style={{marginBottom: \"-15px\", paddingLeft: \"10px\", textAlign: \"center\", width: \"100%\"}}>\r\n                    <span style={{marginBottom: \"-15px\", zIndex: \"2\", backgroundColor: \"white\", padding: \"1px\", color: \"gray\"}}>Password</span>\r\n                </Form.Label>\r\n                <Form.Control type=\"password\" style={{paddingTop: \"5px\", marginTop: \"-12px\", textAlign: \"center\", color: \"black\"}} onChange={e => setPassword(e.target.value)}>\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n                <Form.Label style={{marginBottom: \"-15px\", paddingLeft: \"10px\", textAlign: \"center\", width: \"100%\"}}>\r\n                    <span style={{marginBottom: \"-15px\", zIndex: \"2\", backgroundColor: \"white\", padding: \"1px\", color: \"gray\"}}>Confirm Password</span>\r\n                </Form.Label>\r\n                <Form.Control type=\"password\" style={{paddingTop: \"5px\", marginTop: \"-12px\", textAlign: \"center\", color: \"black\"}} onChange={e => setConfirmPassword(e.target.value)}>\r\n\r\n                </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group style={{display: \"flex\", justifyContent: \"center\"}}>\r\n                <Button type=\"submit\">\r\n                    Continue\r\n                </Button>\r\n            </Form.Group>\r\n        </Form>\r\n        <p>Already a User? <Link to={\"/\"}>Log In!</Link></p>\r\n    </Container>\r\n    );\r\n}\r\nexport default RegisterForm;","import { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport axios from 'axios';\r\nimport {Link, navigate} from '@reach/router';\r\nimport {Form, Container, Button} from 'react-bootstrap';\r\nimport RegisterForm from '../../components/RegisterForm';\r\nconst Register = () => {\r\n    const createUser = user => {\r\n        axios.post('http://localhost:8000/api/users/new', user)\r\n            .then(res => navigate('/main/' + res.data._id + '/5fb4a3eb1285541d50d8cc7d'))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n\r\n    return (\r\n        < RegisterForm onSubmitProp={createUser}/>\r\n    );\r\n}\r\nexport default Register;","import { navigate } from \"@reach/router\";\r\nimport react from 'react';\r\nconst newRoom = ({userId, roomId}) => {\r\n    navigate('/main/' + userId + '/' + roomId);\r\n    return (<></>);\r\n}\r\nexport default newRoom;","import Main from './views/main/Main';\nimport Login from './views/log_and_reg/Login';\nimport Register from './views/log_and_reg/Register';\nimport NewRoom from './components/main/NewRoom';\n\nimport {Router} from '@reach/router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        < Login path=\"/\"/>\n        < Register path=\"/register\"/>\n        < Main path=\"/main/:userId/:roomId\"/>\n        < NewRoom path='/newRoom/:userId/:roomId'/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}